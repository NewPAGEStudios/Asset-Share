#pragma kernel CSInit
#pragma kernel CSMain

Texture2D<float4> image; 
SamplerState _LinearClamp;
RWStructuredBuffer<uint> computeBuffer;
float4 mask;

[numthreads(64, 1, 1)]
void CSInit(uint3 id : SV_DispatchThreadID) 
{
	computeBuffer[id.x] = 0.0;
}

[numthreads(8, 8, 1)]
void CSMain (uint3 id : SV_DispatchThreadID) 
{
	float w, h;
	image.GetDimensions(w, h);

	float u = id.x / w;
	float v = id.y / h;
	float2 uv = float2 (u, v);
	float4 color = image.SampleLevel(_LinearClamp, uv, 0);
	uint value = step(abs(length(color.rgba - mask.xyzw)), 0.05);

	InterlockedAdd(computeBuffer[0], value);
}